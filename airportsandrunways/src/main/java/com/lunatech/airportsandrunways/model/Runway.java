package com.lunatech.airportsandrunways.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.ManyToOne;

@Entity(name="runways")
public class Runway {	
	
	public int getId() {
		return id;
	}
	@Id
	private int id;
	@ManyToOne
	private Airport airport;
	//private int airportRef;
	//private String airportId;//generated by the manytoone - no need to replicate
	@Column(name="length_ft")
	private int length;
	@Column(name="width_ft")
	private int width;
	private String surface;//ENUM? - ALUM, ALUM-DECK, ALUMINIUM, ARG, ASB, ASP*, ASP/CON, ASP/CONC, ASP/GRE, ASP/GRS, ASP/TURF, ASPH, ASPH/CONC, ASPH/GRASS, ASPH/GRVL, ASPH/GRVL-F, ASPHALT*, ASPH-CONC*, ASPH/CONC-F, ASPH/CONC-G, ASPH/CONC-P, ASPH-DIRT, ASPH-DIRT-G, , ASPH-DIRT-P, , ASPH-E, , ASPH-F, , ASPH-G, ASPH-GRVL, ASPH-GRVL-F, ASPH-GRVL-G, ASPH-GRVL-P, ASPH-L, ASPH-P, ASPH-TRTD, ASPH-TRTD-F, ASPH-TRTD-G, ASPH-TRTD-P, ASPH-TURF, ASPH-TURF-F, ASPH-TURF-G, B, BIT, ....    
	private boolean lighted;
	private boolean closed;
	private int leIdent;
	@Column(name="le_latitude_deg")
	private float leLatitude;//
	@Column(name="le_longitude_deg")
	private float leLongitude;//
	@Column(name="le_elevation_ft")
	private int leElevation;
	@Column(name="le_heading_degT")
	private float leHeading;
	@Column(name="le_displaced_threshold_ft")
	private int leDisplacedThreshold;
	private String heIdent;
	@Column(name="he_latitude_deg")
	private float heLatitude;
	@Column(name="he_longitude_deg")
	private float heLongitude;
	@Column(name="he_elevation_ft")
	private int heElevation;
	@Column(name="he_heading_degT")
	private float heHeading;
	@Column(name="he_displaced_threshold_ft")
	private int heDisplacedThreshold;
}
